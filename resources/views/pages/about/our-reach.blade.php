@extends('pages.about.layout')

@section('title', $title)
@section('file',$title)
@section('folder',$folder)

@section('page-content')

<!-- <h1 class="text-center text-slate-900 text-5xl mt-10 font-bold uppercase">{{$title}}</h1> -->

<div class=" w-full shadow  p-4 md:p-6 ">

    <div class="flex justify-between mb-3">
        <div class="flex justify-center items-center">

            <div data-popover id="chart-info" role="tooltip"
                class="absolute z-10 invisible inline-block text-sm   transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-0 w-72  dark:border-gray-600 dark:text-gray-400">
                <div class="p-3 space-y-2">
                    <h3 class="font-semibold text-gray-900 dark:text-white">Activity growth - Incremental</h3>
                    <p>Report helps navigate cumulative growth of community activities. Ideally, the chart should have a
                        growing trend, as stagnating chart signifies a significant decrease of community activity.</p>
                    <h3 class="font-semibold text-gray-900 dark:text-white">Calculation</h3>
                    <p>For each date bucket, the all-time volume of activities is calculated. This means that activities
                        in period n contain all activities up to period n, plus the activities generated by your
                        community in period.</p>
                    <a href="#"
                        class="flex items-center font-medium text-blue-600 dark:text-blue-500 dark:hover:text-blue-600 hover:text-blue-700 hover:underline">Read
                        more <svg class="w-2 h-2 ms-1.5 rtl:rotate-180" aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="m1 9 4-4-4-4" />
                        </svg></a>
                </div>
                <div data-popper-arrow></div>
            </div>
        </div>

    </div>

    <div>
        <div class=" w-full" id="graph_of">
            <div class="flex items-center me-4">
                <input id="water_conservation" type="checkbox" name="default-checkbox" value="water_conservation"
                    class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 ">
                <label for="Water Conservation" class="ms-2 text-sm font-medium ">Water Conservation and
                    Sanitation</label>
            </div>
            <div class="flex items-center me-4">
                <input id="environment" type="checkbox" name="default-checkbox" value="environment"
                    class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 ">
                <label for="Environment" class="ms-2 text-sm font-medium ">Environment</label>
            </div>
            <div class="flex items-center me-4">
                <input id="health_and_well_being" type="checkbox" name="default-checkbox" value="health_and_well_being"
                    class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 ">
                <label for="Health and Well Being" class="ms-2 text-sm font-medium ">Health and Well-being</label>
            </div>
        </div>
    </div>

    <!-- Donut Chart -->
    <div class="py-6" id="donut-chart"></div>

</div>




<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script>
const getChartOptions = () => {
    return {
        series: [11.1, 7.5, 2.4, 3.4, 0.3],
        colors: ["#1C64F2", "#16BDCA", "#FDBA8C", "#E74694", "#000000"],
        chart: {
            height: 320,
            width: "100%",
            type: "donut",
        },
        stroke: {
            colors: ["transparent"],
            lineCap: "",
        },
        plotOptions: {
            pie: {
                donut: {
                    labels: {
                        show: true,
                        name: {
                            show: true,
                            fontFamily: "Inter, sans-serif",
                            offsetY: 20,
                        },
                        total: {
                            showAlways: true,
                            show: true,
                            label: "Unique visitors",
                            fontFamily: "Inter, sans-serif",
                            formatter: function(w) {
                                const sum = w.globals.seriesTotals.reduce((a, b) => {
                                    return a + b
                                }, 0)
                                return '' + sum.toFixed(2) + 'k'
                            },
                        },
                        value: {
                            show: true,
                            fontFamily: "Inter, sans-serif",
                            offsetY: -20,
                            formatter: function(value) {
                                return value.toFixed(2) + "k"
                            },
                        },
                    },
                    size: "80%",
                },
            },
        },
        grid: {
            padding: {
                top: -2,
            },
        },
        labels: ["Street Plays", "Signature Campaign", "Awareness Raillies",
            "Various School/College Level Competitions", "Others",
        ],
        dataLabels: {
            enabled: false,
        },
        legend: {
            position: "bottom",
            fontFamily: "Inter, sans-serif",
        },
        yaxis: {
            labels: {
                formatter: function(value) {
                    return value + "k"
                },
            },
        },
        xaxis: {
            labels: {
                formatter: function(value) {
                    return value + "k"
                },
            },
            axisTicks: {
                show: false,
            },
            axisBorder: {
                show: false,
            },
        },
    }
}

if (document.getElementById("donut-chart") && typeof ApexCharts !== 'undefined') {
    const chart = new ApexCharts(document.getElementById("donut-chart"), getChartOptions());
    chart.render();

    // Get all the checkboxes by their class name
    const checkboxes = document.querySelectorAll('#graph_of input[type="checkbox"]');

    // Function to handle the checkbox change event
    function handleCheckboxChange(event, chart) {
        const checkbox = event.target;
        if (checkbox.checked) {
            switch (checkbox.value) {
                case 'water_conservation':
                    chart.updateSeries([4.1, 0.5, 2.6, 2.3, 0]);
                    break;
                case 'environment':
                    chart.updateSeries([3.1, 1.5, 0.6, 0.3, 0]);
                    break;
                case 'health_and_well_being':
                    chart.updateSeries([4.0, 2.5, 0.6, 0.3, 0]);
                    break;
                default:
                    chart.updateSeries([4.1, 11.5, 2.4, 3.4, 0.3]);
            }

        } else {
            chart.updateSeries([4.1, 11.5, 2.4, 3.4, 0.3]);
        }
    }

    // Attach the event listener to each checkbox
    checkboxes.forEach((checkbox) => {
        checkbox.addEventListener('change', (event) => handleCheckboxChange(event, chart));
    });
}
</script>

@endsection